// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: api/comment/job/v1/job.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSubjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId    int64 `protobuf:"varint,1,opt,name=obj_id,json=objId,proto3" json:"obj_id,omitempty"`
	ObjType  int32 `protobuf:"varint,2,opt,name=obj_type,json=objType,proto3" json:"obj_type,omitempty"`
	MemberId int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *CreateSubjectReq) Reset() {
	*x = CreateSubjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_comment_job_v1_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubjectReq) ProtoMessage() {}

func (x *CreateSubjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_comment_job_v1_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubjectReq.ProtoReflect.Descriptor instead.
func (*CreateSubjectReq) Descriptor() ([]byte, []int) {
	return file_api_comment_job_v1_job_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSubjectReq) GetObjId() int64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *CreateSubjectReq) GetObjType() int32 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *CreateSubjectReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type CacheSubjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId   int64 `protobuf:"varint,1,opt,name=obj_id,json=objId,proto3" json:"obj_id,omitempty"`
	ObjType int32 `protobuf:"varint,2,opt,name=obj_type,json=objType,proto3" json:"obj_type,omitempty"`
}

func (x *CacheSubjectReq) Reset() {
	*x = CacheSubjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_comment_job_v1_job_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheSubjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheSubjectReq) ProtoMessage() {}

func (x *CacheSubjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_comment_job_v1_job_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheSubjectReq.ProtoReflect.Descriptor instead.
func (*CacheSubjectReq) Descriptor() ([]byte, []int) {
	return file_api_comment_job_v1_job_proto_rawDescGZIP(), []int{1}
}

func (x *CacheSubjectReq) GetObjId() int64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *CacheSubjectReq) GetObjType() int32 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

type CreateCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId       int64   `protobuf:"varint,1,opt,name=obj_id,json=objId,proto3" json:"obj_id,omitempty"`
	ObjType     int32   `protobuf:"varint,2,opt,name=obj_type,json=objType,proto3" json:"obj_type,omitempty"`
	MemberId    int64   `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Root        int64   `protobuf:"varint,4,opt,name=root,proto3" json:"root,omitempty"`
	Parent      int64   `protobuf:"varint,5,opt,name=parent,proto3" json:"parent,omitempty"`
	AtMemberIds []int64 `protobuf:"varint,6,rep,packed,name=at_member_ids,json=atMemberIds,proto3" json:"at_member_ids,omitempty"` // @的人
	Message     string  `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	Meta        string  `protobuf:"bytes,8,opt,name=meta,proto3" json:"meta,omitempty"` // 背景等信息
	Ip          int64   `protobuf:"varint,9,opt,name=ip,proto3" json:"ip,omitempty"`
	Platform    int32   `protobuf:"varint,10,opt,name=platform,proto3" json:"platform,omitempty"`
	Device      string  `protobuf:"bytes,11,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *CreateCommentReq) Reset() {
	*x = CreateCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_comment_job_v1_job_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentReq) ProtoMessage() {}

func (x *CreateCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_comment_job_v1_job_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentReq.ProtoReflect.Descriptor instead.
func (*CreateCommentReq) Descriptor() ([]byte, []int) {
	return file_api_comment_job_v1_job_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCommentReq) GetObjId() int64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *CreateCommentReq) GetObjType() int32 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *CreateCommentReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *CreateCommentReq) GetRoot() int64 {
	if x != nil {
		return x.Root
	}
	return 0
}

func (x *CreateCommentReq) GetParent() int64 {
	if x != nil {
		return x.Parent
	}
	return 0
}

func (x *CreateCommentReq) GetAtMemberIds() []int64 {
	if x != nil {
		return x.AtMemberIds
	}
	return nil
}

func (x *CreateCommentReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateCommentReq) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *CreateCommentReq) GetIp() int64 {
	if x != nil {
		return x.Ip
	}
	return 0
}

func (x *CreateCommentReq) GetPlatform() int32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *CreateCommentReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

type DeleteCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId int64 `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
}

func (x *DeleteCommentReq) Reset() {
	*x = DeleteCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_comment_job_v1_job_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentReq) ProtoMessage() {}

func (x *DeleteCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_comment_job_v1_job_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentReq.ProtoReflect.Descriptor instead.
func (*DeleteCommentReq) Descriptor() ([]byte, []int) {
	return file_api_comment_job_v1_job_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCommentReq) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type CacheIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId    int64 `protobuf:"varint,1,opt,name=obj_id,json=objId,proto3" json:"obj_id,omitempty"`
	ObjType  int32 `protobuf:"varint,2,opt,name=obj_type,json=objType,proto3" json:"obj_type,omitempty"`
	PageNo   int32 `protobuf:"varint,3,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *CacheIndexReq) Reset() {
	*x = CacheIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_comment_job_v1_job_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheIndexReq) ProtoMessage() {}

func (x *CacheIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_comment_job_v1_job_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheIndexReq.ProtoReflect.Descriptor instead.
func (*CacheIndexReq) Descriptor() ([]byte, []int) {
	return file_api_comment_job_v1_job_proto_rawDescGZIP(), []int{4}
}

func (x *CacheIndexReq) GetObjId() int64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *CacheIndexReq) GetObjType() int32 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *CacheIndexReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *CacheIndexReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type CacheContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentIds []int64 `protobuf:"varint,1,rep,packed,name=comment_ids,json=commentIds,proto3" json:"comment_ids,omitempty"`
}

func (x *CacheContentReq) Reset() {
	*x = CacheContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_comment_job_v1_job_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheContentReq) ProtoMessage() {}

func (x *CacheContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_comment_job_v1_job_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheContentReq.ProtoReflect.Descriptor instead.
func (*CacheContentReq) Descriptor() ([]byte, []int) {
	return file_api_comment_job_v1_job_proto_rawDescGZIP(), []int{5}
}

func (x *CacheContentReq) GetCommentIds() []int64 {
	if x != nil {
		return x.CommentIds
	}
	return nil
}

type CacheReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId int64 `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	PageNo    int32 `protobuf:"varint,2,opt,name=page_no,json=pageNo,proto3" json:"page_no,omitempty"`
	PageSize  int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *CacheReplyReq) Reset() {
	*x = CacheReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_comment_job_v1_job_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheReplyReq) ProtoMessage() {}

func (x *CacheReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_comment_job_v1_job_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheReplyReq.ProtoReflect.Descriptor instead.
func (*CacheReplyReq) Descriptor() ([]byte, []int) {
	return file_api_comment_job_v1_job_proto_rawDescGZIP(), []int{6}
}

func (x *CacheReplyReq) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CacheReplyReq) GetPageNo() int32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *CacheReplyReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type Null struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Null) Reset() {
	*x = Null{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_comment_job_v1_job_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Null) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Null) ProtoMessage() {}

func (x *Null) ProtoReflect() protoreflect.Message {
	mi := &file_api_comment_job_v1_job_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Null.ProtoReflect.Descriptor instead.
func (*Null) Descriptor() ([]byte, []int) {
	return file_api_comment_job_v1_job_proto_rawDescGZIP(), []int{7}
}

var File_api_comment_job_v1_job_proto protoreflect.FileDescriptor

var file_api_comment_job_v1_job_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6a, 0x6f,
	0x62, 0x2f, 0x76, 0x31, 0x2f, 0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x22, 0x61,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x62, 0x6a,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x62, 0x6a,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x43, 0x0a, 0x0f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x62, 0x6a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f,
	0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa3, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6f,
	0x62, 0x6a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x62, 0x6a,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x61,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x31, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x77, 0x0a, 0x0d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x32, 0x0a, 0x0f, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x64, 0x0a, 0x0d,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x06, 0x0a, 0x04, 0x4e, 0x75, 0x6c, 0x6c, 0x32, 0x89, 0x04, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4a, 0x6f, 0x62, 0x12, 0x49, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x6a, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x75, 0x6c, 0x6c, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_comment_job_v1_job_proto_rawDescOnce sync.Once
	file_api_comment_job_v1_job_proto_rawDescData = file_api_comment_job_v1_job_proto_rawDesc
)

func file_api_comment_job_v1_job_proto_rawDescGZIP() []byte {
	file_api_comment_job_v1_job_proto_rawDescOnce.Do(func() {
		file_api_comment_job_v1_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_comment_job_v1_job_proto_rawDescData)
	})
	return file_api_comment_job_v1_job_proto_rawDescData
}

var file_api_comment_job_v1_job_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_comment_job_v1_job_proto_goTypes = []interface{}{
	(*CreateSubjectReq)(nil), // 0: comment.job.v1.CreateSubjectReq
	(*CacheSubjectReq)(nil),  // 1: comment.job.v1.CacheSubjectReq
	(*CreateCommentReq)(nil), // 2: comment.job.v1.CreateCommentReq
	(*DeleteCommentReq)(nil), // 3: comment.job.v1.DeleteCommentReq
	(*CacheIndexReq)(nil),    // 4: comment.job.v1.CacheIndexReq
	(*CacheContentReq)(nil),  // 5: comment.job.v1.CacheContentReq
	(*CacheReplyReq)(nil),    // 6: comment.job.v1.CacheReplyReq
	(*Null)(nil),             // 7: comment.job.v1.Null
}
var file_api_comment_job_v1_job_proto_depIdxs = []int32{
	0, // 0: comment.job.v1.CommentJob.CreateSubject:input_type -> comment.job.v1.CreateSubjectReq
	1, // 1: comment.job.v1.CommentJob.CacheSubject:input_type -> comment.job.v1.CacheSubjectReq
	2, // 2: comment.job.v1.CommentJob.CreateComment:input_type -> comment.job.v1.CreateCommentReq
	3, // 3: comment.job.v1.CommentJob.DeleteComment:input_type -> comment.job.v1.DeleteCommentReq
	4, // 4: comment.job.v1.CommentJob.CacheIndex:input_type -> comment.job.v1.CacheIndexReq
	5, // 5: comment.job.v1.CommentJob.CacheContent:input_type -> comment.job.v1.CacheContentReq
	6, // 6: comment.job.v1.CommentJob.CacheReply:input_type -> comment.job.v1.CacheReplyReq
	7, // 7: comment.job.v1.CommentJob.CreateSubject:output_type -> comment.job.v1.Null
	7, // 8: comment.job.v1.CommentJob.CacheSubject:output_type -> comment.job.v1.Null
	7, // 9: comment.job.v1.CommentJob.CreateComment:output_type -> comment.job.v1.Null
	7, // 10: comment.job.v1.CommentJob.DeleteComment:output_type -> comment.job.v1.Null
	7, // 11: comment.job.v1.CommentJob.CacheIndex:output_type -> comment.job.v1.Null
	7, // 12: comment.job.v1.CommentJob.CacheContent:output_type -> comment.job.v1.Null
	7, // 13: comment.job.v1.CommentJob.CacheReply:output_type -> comment.job.v1.Null
	7, // [7:14] is the sub-list for method output_type
	0, // [0:7] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_comment_job_v1_job_proto_init() }
func file_api_comment_job_v1_job_proto_init() {
	if File_api_comment_job_v1_job_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_comment_job_v1_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_comment_job_v1_job_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheSubjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_comment_job_v1_job_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_comment_job_v1_job_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_comment_job_v1_job_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_comment_job_v1_job_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_comment_job_v1_job_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_comment_job_v1_job_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Null); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_comment_job_v1_job_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_comment_job_v1_job_proto_goTypes,
		DependencyIndexes: file_api_comment_job_v1_job_proto_depIdxs,
		MessageInfos:      file_api_comment_job_v1_job_proto_msgTypes,
	}.Build()
	File_api_comment_job_v1_job_proto = out.File
	file_api_comment_job_v1_job_proto_rawDesc = nil
	file_api_comment_job_v1_job_proto_goTypes = nil
	file_api_comment_job_v1_job_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CommentJobClient is the client API for CommentJob service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommentJobClient interface {
	CreateSubject(ctx context.Context, in *CreateSubjectReq, opts ...grpc.CallOption) (*Null, error)
	CacheSubject(ctx context.Context, in *CacheSubjectReq, opts ...grpc.CallOption) (*Null, error)
	CreateComment(ctx context.Context, in *CreateCommentReq, opts ...grpc.CallOption) (*Null, error)
	DeleteComment(ctx context.Context, in *DeleteCommentReq, opts ...grpc.CallOption) (*Null, error)
	CacheIndex(ctx context.Context, in *CacheIndexReq, opts ...grpc.CallOption) (*Null, error)
	CacheContent(ctx context.Context, in *CacheContentReq, opts ...grpc.CallOption) (*Null, error)
	CacheReply(ctx context.Context, in *CacheReplyReq, opts ...grpc.CallOption) (*Null, error)
}

type commentJobClient struct {
	cc grpc.ClientConnInterface
}

func NewCommentJobClient(cc grpc.ClientConnInterface) CommentJobClient {
	return &commentJobClient{cc}
}

func (c *commentJobClient) CreateSubject(ctx context.Context, in *CreateSubjectReq, opts ...grpc.CallOption) (*Null, error) {
	out := new(Null)
	err := c.cc.Invoke(ctx, "/comment.job.v1.CommentJob/CreateSubject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentJobClient) CacheSubject(ctx context.Context, in *CacheSubjectReq, opts ...grpc.CallOption) (*Null, error) {
	out := new(Null)
	err := c.cc.Invoke(ctx, "/comment.job.v1.CommentJob/CacheSubject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentJobClient) CreateComment(ctx context.Context, in *CreateCommentReq, opts ...grpc.CallOption) (*Null, error) {
	out := new(Null)
	err := c.cc.Invoke(ctx, "/comment.job.v1.CommentJob/CreateComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentJobClient) DeleteComment(ctx context.Context, in *DeleteCommentReq, opts ...grpc.CallOption) (*Null, error) {
	out := new(Null)
	err := c.cc.Invoke(ctx, "/comment.job.v1.CommentJob/DeleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentJobClient) CacheIndex(ctx context.Context, in *CacheIndexReq, opts ...grpc.CallOption) (*Null, error) {
	out := new(Null)
	err := c.cc.Invoke(ctx, "/comment.job.v1.CommentJob/CacheIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentJobClient) CacheContent(ctx context.Context, in *CacheContentReq, opts ...grpc.CallOption) (*Null, error) {
	out := new(Null)
	err := c.cc.Invoke(ctx, "/comment.job.v1.CommentJob/CacheContent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentJobClient) CacheReply(ctx context.Context, in *CacheReplyReq, opts ...grpc.CallOption) (*Null, error) {
	out := new(Null)
	err := c.cc.Invoke(ctx, "/comment.job.v1.CommentJob/CacheReply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommentJobServer is the server API for CommentJob service.
type CommentJobServer interface {
	CreateSubject(context.Context, *CreateSubjectReq) (*Null, error)
	CacheSubject(context.Context, *CacheSubjectReq) (*Null, error)
	CreateComment(context.Context, *CreateCommentReq) (*Null, error)
	DeleteComment(context.Context, *DeleteCommentReq) (*Null, error)
	CacheIndex(context.Context, *CacheIndexReq) (*Null, error)
	CacheContent(context.Context, *CacheContentReq) (*Null, error)
	CacheReply(context.Context, *CacheReplyReq) (*Null, error)
}

// UnimplementedCommentJobServer can be embedded to have forward compatible implementations.
type UnimplementedCommentJobServer struct {
}

func (*UnimplementedCommentJobServer) CreateSubject(context.Context, *CreateSubjectReq) (*Null, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubject not implemented")
}
func (*UnimplementedCommentJobServer) CacheSubject(context.Context, *CacheSubjectReq) (*Null, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CacheSubject not implemented")
}
func (*UnimplementedCommentJobServer) CreateComment(context.Context, *CreateCommentReq) (*Null, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateComment not implemented")
}
func (*UnimplementedCommentJobServer) DeleteComment(context.Context, *DeleteCommentReq) (*Null, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteComment not implemented")
}
func (*UnimplementedCommentJobServer) CacheIndex(context.Context, *CacheIndexReq) (*Null, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CacheIndex not implemented")
}
func (*UnimplementedCommentJobServer) CacheContent(context.Context, *CacheContentReq) (*Null, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CacheContent not implemented")
}
func (*UnimplementedCommentJobServer) CacheReply(context.Context, *CacheReplyReq) (*Null, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CacheReply not implemented")
}

func RegisterCommentJobServer(s *grpc.Server, srv CommentJobServer) {
	s.RegisterService(&_CommentJob_serviceDesc, srv)
}

func _CommentJob_CreateSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubjectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentJobServer).CreateSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comment.job.v1.CommentJob/CreateSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentJobServer).CreateSubject(ctx, req.(*CreateSubjectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentJob_CacheSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CacheSubjectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentJobServer).CacheSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comment.job.v1.CommentJob/CacheSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentJobServer).CacheSubject(ctx, req.(*CacheSubjectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentJob_CreateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentJobServer).CreateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comment.job.v1.CommentJob/CreateComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentJobServer).CreateComment(ctx, req.(*CreateCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentJob_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentJobServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comment.job.v1.CommentJob/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentJobServer).DeleteComment(ctx, req.(*DeleteCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentJob_CacheIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CacheIndexReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentJobServer).CacheIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comment.job.v1.CommentJob/CacheIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentJobServer).CacheIndex(ctx, req.(*CacheIndexReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentJob_CacheContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CacheContentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentJobServer).CacheContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comment.job.v1.CommentJob/CacheContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentJobServer).CacheContent(ctx, req.(*CacheContentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentJob_CacheReply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CacheReplyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentJobServer).CacheReply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comment.job.v1.CommentJob/CacheReply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentJobServer).CacheReply(ctx, req.(*CacheReplyReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CommentJob_serviceDesc = grpc.ServiceDesc{
	ServiceName: "comment.job.v1.CommentJob",
	HandlerType: (*CommentJobServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSubject",
			Handler:    _CommentJob_CreateSubject_Handler,
		},
		{
			MethodName: "CacheSubject",
			Handler:    _CommentJob_CacheSubject_Handler,
		},
		{
			MethodName: "CreateComment",
			Handler:    _CommentJob_CreateComment_Handler,
		},
		{
			MethodName: "DeleteComment",
			Handler:    _CommentJob_DeleteComment_Handler,
		},
		{
			MethodName: "CacheIndex",
			Handler:    _CommentJob_CacheIndex_Handler,
		},
		{
			MethodName: "CacheContent",
			Handler:    _CommentJob_CacheContent_Handler,
		},
		{
			MethodName: "CacheReply",
			Handler:    _CommentJob_CacheReply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/comment/job/v1/job.proto",
}
